---
import { Image } from 'astro:assets';

import { getCollection } from "astro:content"


const standorte = await getCollection("standorte");
const {coords} = Astro.props
const locations = coords ? coords.join(';') : standorte.map(location => {
    const {data} = location
    return data.coords.join(';')
})
---
<style>
    .mapboxgl-control-container {
        display: none !important;
    }
</style>

<div class="container relative md:my-6">
    <div class="absolute top-4 left-7 z-50 standorte">
        <div class="swiper max-w-[160px] rounded-xl">
            <div class="swiper-wrapper relative">
                {standorte.map((destination, idx) => {    
                    const {data} = destination
                    return (
                        <div class="swiper-slide" data-target={destination.data.coords} data-index={idx}>
                            <a href={`/standort/${destination.slug}`}  class="relative rounded-xl inline-block overflow-hidden border-4 border-white">
                                <Image
                                    src={data.image}
                                    alt={data.title}
                                    width="280"
                                    height="320"
                                    class="aspect-square rounded-xl object-cover w-full m-0"
                                />
    
                                <div class="absolute bottom-0 left-0 w-full h-auto px-2 py-4 bg-gradient-to-t from-black/50 to-black/0 text-white">
                                    <h2 class=" leading-none">
                                        {data.title}
                                    </h2>
                                </div>
                            </a>
                        </div>
                    )
                })}
            </div>
        </div>
    </div>
    <div class="absolute bottom-0 left-0 w-full text-center z-50 p-6">
        <div class="inline-block">
            <a href="/unterkuenfte" class=" flex items-center gap-2 bg-white rounded-full py-3 px-6 ">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 6.75V15m6-6v8.25m.503 3.498l4.875-2.437c.381-.19.622-.58.622-1.006V4.82c0-.836-.88-1.38-1.628-1.006l-3.869 1.934c-.317.159-.69.159-1.006 0L9.503 3.252a1.125 1.125 0 00-1.006 0L3.622 5.689C3.24 5.88 3 6.27 3 6.695V19.18c0 .836.88 1.38 1.628 1.006l3.869-1.934c.317-.159.69-.159 1.006 0l4.994 2.497c.317.158.69.158 1.006 0z" />
                </svg>
                <span>alle Unterk√ºnfte</span>
            </a>
        </div>
        
    </div>
    <div id="karte" class="rounded-xl w-full aspect-portrait md:aspect-video" data-coords={locations.toString()}></div>
</div>

<script>
    // core version + navigation, pagination modules:
    import Swiper from 'swiper';
    import { Autoplay, Navigation, Pagination, EffectCards } from 'swiper/modules';

    Swiper.use([Autoplay, EffectCards]);
    // import Swiper and modules styles
    import 'swiper/css';
    import 'swiper/css/navigation';
    import 'swiper/css/pagination';

    const wrapper = document.querySelector(".standorte");
    const element = wrapper.querySelector(".swiper");
  
    const options = {
        effect: "slide",
        slidesPerView: 1,
        allowTouchMove: false
    };

    const swiper = new Swiper(element, options);

    import mapboxgl from "mapbox-gl";
    mapboxgl.accessToken = "pk.eyJ1IjoidWhvcm4iLCJhIjoiY2wzZTlocThxMDAydDNicG50anc1b2R1MSJ9.-rO7_-YT3mRs1OtN7_lFhQ";

    const updateSwiper = (coordsString) => {
        const coords = coordsString.split(';')
        const target = coords.join(',')

        const slide = swiper.slides.find(s => s.dataset.target === target); 
        swiper.slideTo(slide.dataset.index)
    }

    const init = async () => {
        const elem = document.getElementById("karte");
        if (!elem) return;

        const {coords} = elem.dataset;
        const coordsArray = coords.split(",");

        const map = new mapboxgl.Map({
            container: elem,
            style: "mapbox://styles/uhorn/clo6thasx00kn01qxc7f5b538",
            zoom: 10,
            center: [13.691880, 54.377100],
        });
        map.scrollZoom.disable();

        coordsArray.forEach((coord) => {
            const el = document.createElement("div");
            el.className = "marker";
            el.dataset.coords = coord;
            const innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#14285A" class="w-6 h-6"><path fill-rule="evenodd" d="M11.54 22.351l.07.04.028.016a.76.76 0 00.723 0l.028-.015.071-.041a16.975 16.975 0 001.144-.742 19.58 19.58 0 002.683-2.282c1.944-1.99 3.963-4.98 3.963-8.827a8.25 8.25 0 00-16.5 0c0 3.846 2.02 6.837 3.963 8.827a19.58 19.58 0 002.682 2.282 16.975 16.975 0 001.145.742zM12 13.5a3 3 0 100-6 3 3 0 000 6z" clip-rule="evenodd" /></svg>`;
            el.innerHTML = innerHTML;
            el.style.cursor = "pointer";

            new mapboxgl.Marker(el).setLngLat(coord.split(";")).addTo(map);
        });

        const markers = map._markers
        markers.forEach(marker => {
            marker._element.addEventListener('click', () => {
                markers.forEach(marker => {
                    marker._element.querySelector('svg').style.fill = '#14285A'
                })
                marker._element.querySelector('svg').style.fill = '#FF007A'

                updateSwiper(marker._element.dataset.coords)
            })
        });
    };
    init();
</script>