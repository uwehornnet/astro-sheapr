---
import { getCollection } from "astro:content"
import { Image } from 'astro:assets';
const {exclude} = Astro.props

const destinations = await getCollection("standorte").then(destination => {
    if(!exclude) {
        return destination
    } else {
        return destination.filter(item => item.slug !== exclude)
    }
})


---

<div class="destinations my-6">
    <div class="swiper overflow-hidden">
        <div class="swiper-wrapper relative">
            {destinations.map((destination, idx) => {    
                const {data} = destination
                return (
                    <div class="swiper-slide" key={idx}>
                        <a href={`/standort/${destination.slug}`}  class="relative rounded-xl bg-white aspect-portrait flex flex-col justify-end overflow-hidden">
                            <Image
                                src={data.image}
                                alt={data.title}
                                width="280"
                                height="320"
                                class="absolute top-0 left-0 w-full h-full rounded-xl object-cover"
                            />

                            <div class="relative p-4 flex items-center justify-between bg-black/30 text-white backdrop-blur-xl">
                                <h2 class="font-baloo flex-1 leading-none">
                                    {data.title}
                                </h2>
                                <svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    viewBox="0 0 24 24"
                                    fill="currentColor"
                                    class="w-5 h-5"
                                >
                                    <path
                                        fill-rule="evenodd"
                                        d="M8.25 3.75H19.5a.75.75 0 01.75.75v11.25a.75.75 0 01-1.5 0V6.31L5.03 20.03a.75.75 0 01-1.06-1.06L17.69 5.25H8.25a.75.75 0 010-1.5z"
                                        clip-rule="evenodd"
                                    />
                                </svg>
                            </div>
                        </a>
                    </div>
                )
            })}
        </div>

        <div class="swiper-controls flex items-center justify-between mt-4">
            <div class="swiper-controls-prev cursor-pointer">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 pointer-events-none">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18" />
                </svg>
            </div>
            <div class="swiper-pagination"></div>
            <div class="swiper-controls-next cursor-pointer">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6 pointer-events-none">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3" />
                </svg>
            </div>
        </div>
    </div>
</div>

<script>
    // core version + navigation, pagination modules:
    import Swiper from 'swiper';
    import { Autoplay, Navigation, Pagination } from 'swiper/modules';

    Swiper.use([Autoplay, Navigation, Pagination]);
    // import Swiper and modules styles
    import 'swiper/css';
    import 'swiper/css/navigation';
    import 'swiper/css/pagination';

    const wrapper = document.querySelector(".destinations");
    const element = wrapper.querySelector(".swiper");
  
    const options = {
        autoHeight: false,
        slidesPerView: 4,
        spaceBetween: 24,
        autoplay: {
            delay: 5000
        },
        speed: 600,
        effect: "slide",
    };

    options["navigation"] = {
        nextEl: wrapper.querySelector(".swiper-controls-next"),
        prevEl: wrapper.querySelector(".swiper-controls-prev"),
    };

    options["pagination"] = {
        el: wrapper.querySelector(".swiper-pagination"),
        clickable: true,
    };

    options["breakpoints"] = {
        320: {
            slidesPerView: 1,
            spaceBetween: 16,
        },
        // when window width is >= 480px
        480: {
            slidesPerView: 2,
            spaceBetween: 16,
        },
        // when window width is >= 640px
        640: {
            slidesPerView: 3,
            spaceBetween: 16,
        },
        1024: {
            slidesPerView: 4,
            spaceBetween: 24,
        },
    };

    const swiper = new Swiper(element, options);
</script>

